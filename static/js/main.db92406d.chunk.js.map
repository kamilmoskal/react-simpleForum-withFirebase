{"version":3,"sources":["components/LogInLinks.js","actions/authActions.js","components/LogOutLinks.js","components/Navbar.js","components/SignIn.js","components/SignUp.js","components/TopicSummary.js","components/TopicsList.js","components/Home.js","components/CreateTopic.js","actions/topicActions.js","components/Comment.js","components/TopicDetails.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/topicReducer.js","reducers/rootReducer.js","fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","NavLink","to","className","profile","name","onClick","LogOutLinks","Navbar","elem","document","querySelector","M","Sidenav","init","edge","inDuration","_this$props","this","Links","uid","components_LogInLinks","components_LogOutLinks","href","data-target","id","Component","state","firebase","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","resetAuthError","authError","Redirect","onSubmit","htmlFor","onChange","datafromstate","credentials","_ref","signInWithEmailAndPassword","catch","error","SignUp","signUp","newUserData","newUser","_ref3","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","TopicSummary","topic","title","comments","length","TopicsList","topics","map","Link","key","components_TopicSummary","Home","components_TopicsList","compose","ordered","firestoreConnect","CreateTopic","content","createTopic","history","push","formNullTopic","resetFormError","formError","authorId","add","objectSpread","nameId","createdAt","Date","deleteComment","commentData","comment","newComments","data","idTopic","filter","update","moment","toDate","calendar","TopicDetails","topicId","commentId","Math","random","location","pathname","slice","createComment","formNullComment","addCommentVisibility","components_Comment","ownProps","FieldValue","arrayUnion","App","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","patch","Boolean","window","hostname","match","initState","authReducer","arguments","undefined","action","console","log","message","topicReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db92406d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../actions/authActions'\r\n\r\nconst LogInLinks = (props) => {\r\n  return (\r\n      <div>\r\n        <li><NavLink to='/'>Home</NavLink></li>\r\n        <li><NavLink to='/' className=\"red darken-3\">{props.profile.name}</NavLink></li>\r\n        <li><NavLink to='/create'>Create Topic</NavLink></li>\r\n        <li><NavLink to=\"/\" onClick={props.signOut}>Log out</NavLink></li>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogInLinks)\r\n","export const signIn = (credentials) => {   /// wez email i password\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'LOGIN_ERROR', error })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid) ///.add() dodalo by usera z wygenerowanym id, ale ze uzywamy doc(resp.user.uid) bierzemy id ktore jest przypisane w firebase auth\r\n            .set({\r\n                name: newUser.name\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst LogOutLinks = () => {\r\n  return (\r\n    <div>\r\n        <li><NavLink to='/signin'>Log in</NavLink></li>\r\n        <li><NavLink to='/signup'>Sign in</NavLink></li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogOutLinks\r\n","import React, { Component } from 'react';\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport LogInLinks from './LogInLinks'\r\nimport LogOutLinks from './LogOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends Component {\r\n    componentDidMount() {\r\n        var elem = document.querySelector(\".sidenav\");\r\n        var instance = M.Sidenav.init(elem, {\r\n            edge: \"left\",\r\n            inDuration: 250\r\n        });\r\n    }\r\n    render(){\r\n        const { auth, profile } = this.props\r\n        const Links = auth.uid ? <LogInLinks profile={profile}/> : <LogOutLinks /> \r\n          \r\n        return (\r\n            <nav className=\"nav-wrapper red darken-4\">\r\n                <div className=\"container\">\r\n                    <NavLink to='/' className=\"brand-logo\"><span>Simple Forum</span></NavLink>\r\n                    <a href=\"/\" className=\"sidenav-trigger\" data-target=\"mobile-links\">\r\n                        <i className=\"material-icons\">menu</i>\r\n                    </a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        {Links}\r\n                    </ul>\r\n                    <ul className=\"sidenav\" id=\"mobile-links\">\r\n                        {Links}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n          )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    //// reset authError\r\n    componentDidMount(){\r\n        this.props.resetAuthError();\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  render() {\r\n      const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container row\">\r\n          <form onSubmit={this.handleSubmit} className=\"col s12 m6 offset-m3\">\r\n                <h5>Sign in</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <div className=\"btn red darken-4 waves-effect waves-light\" onClick={this.handleSubmit}>Login</div>\r\n                </div>\r\n                <div className=\"center\">\r\n                    { authError ? <p className=\"red-text\">{authError}</p> : null }\r\n                </div>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (datafromstate) => dispatch(signIn(datafromstate)),\r\n        resetAuthError: () => { dispatch({type: 'RESET_ERROR' }) } \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n    }\r\n    //// reset authError\r\n    componentDidMount(){\r\n        this.props.resetAuthError();\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  render() {\r\n      const { authError, auth } = this.props\r\n      if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container row\">\r\n          <form onSubmit={this.handleSubmit} className=\"col s12 m6 offset-m3\">\r\n                <h5>Sign up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <div className=\"btn red darken-4 waves-effect waves-light\" onClick={this.handleSubmit}>Sign up</div>\r\n                </div>\r\n                { authError ? <p className=\"center red-text\">{ authError }</p> : null }\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUserData) => dispatch(signUp(newUserData)),\r\n        resetAuthError: () => { dispatch({type: 'RESET_ERROR' }) } \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React from 'react'\r\n\r\nconst TopicSummary = ({topic}) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <blockquote className=\"flow-text\">\r\n            <p className=\"text-title\">{topic.title}<span className=\"secondary-content black-text\">{topic.comments.length}</span></p>\r\n            </blockquote>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopicSummary","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TopicSummary from './TopicSummary'\r\n\r\nconst TopicsList = ({topics}) => {\r\n    return(\r\n        <div className=\"topic-list section\">\r\n            { topics && topics.map(topic => {\r\n                return (\r\n                    <Link to={'/topic/' + topic.id} key={topic.id}>\r\n                        <TopicSummary topic={topic} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopicsList","import React, { Component } from 'react';\r\nimport TopicsList from './TopicsList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'  // do polaczenia componenta z jedna kolekcja czyli z 'topics' w bazie danych\r\nimport { compose } from 'redux' /// zeby sie polaczyc trzeba dodac drugi higher order component przez compoase\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    const { topics } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\r\n              <TopicsList topics={topics}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    topics: state.firestore.ordered.topics\r\n  }\r\n}\r\n///// standart \r\n///// export default connect(mapStateToProps)(Home) \r\n\r\n////dodanie drugiego higher order componentu rpzez compose i polaczenie z colecttion: topics  naszej bazie danych\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'topics' }\r\n  ])\r\n)(Home)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createTopic } from '../actions/topicActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateTopic extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    componentDidMount(){\r\n        this.props.resetFormError();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.title !== \"\" && this.state.content !== \"\") {\r\n            this.props.createTopic(this.state);\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.props.formNullTopic();\r\n        }\r\n    }\r\n  render() {\r\n    const { auth, formError } = this.props\r\n    if (!auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container row\">\r\n        <form onSubmit={this.handleSubmit} className=\"col s12 m6 offset-m3\">\r\n            <h5 className=\"grey-text text-darken-3\">Create New Topic</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"content\">Topic Content</label>\r\n                <textarea onChange={this.handleChange} id=\"content\" className=\"materialize-textarea\"></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn red darken-4 waves-effect waves-light\">Create</button>\r\n            </div>\r\n            <div className=\"center\">\r\n                { formError ? <p className=\"red-text\">{formError}</p> : null }\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        formError: state.topic.formError \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createTopic: (topic) => dispatch(createTopic(topic)),\r\n        formNullTopic: () => { dispatch({type: 'FORM_NULL_TOPIC' }) },\r\n        resetFormError: () => { dispatch({type: 'RESET_ERROR' }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTopic)","export const createTopic = (topic) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const profile = getState().firebase.profile; // grab profile z state\r\n        const authorId = getState().firebase.auth.uid; // grab active user\r\n        const firestore = getFirestore(); /// reference to our firestore database\r\n        firestore.collection('topics').add({ /// reference to projects in out database /// after dots add new one data to collection\r\n            ...topic,   ///topic has title and content so we adding this\r\n            name: profile.name,\r\n            nameId: authorId,\r\n            createdAt: new Date(),\r\n            comments: []\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TOPIC', topic: topic})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'CREATE_TOPIC_ERROR', error})\r\n        })\r\n    }\r\n}\r\n\r\nexport const createComment = (comment) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('topics').doc(comment.topicId).update({\r\n           \r\n            comments: firestore.FieldValue.arrayUnion({ //// dodanie do arraya 'comments' objectu\r\n                content: comment.content,\r\n                id: comment.commentId,\r\n                idTopic: comment.topicId,\r\n                name: profile.name,\r\n                nameId: authorId,\r\n                createdAt: new Date()\r\n            })\r\n\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_COMMENT', topic: comment})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'CREATE_COMMENT_ERROR', error})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteComment = (comment) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();  \r\n        //// grab actual comments from specific topicID from firestore\r\n        const actualComments = getState().firestore.data.topics[comment.idTopic].comments\r\n        //// delete from firestore clicked comment through comment.id and filter method\r\n        const newComments = actualComments.filter(e => e.id !== comment.id)   \r\n        //// update topic comments\r\n         firestore.collection('topics').doc(comment.idTopic).update({\r\n\r\n            comments: newComments\r\n\r\n        }).then(() => {\r\n            dispatch({ type: 'DELETE_COMMENT', topic: comment})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'DELETE_COMMENT_ERROR', error})\r\n        })  \r\n\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteComment } from '../actions/topicActions'\r\nimport moment from 'moment'\r\n\r\nconst Comment = (props) => {\r\n    const { comment, auth } = props\r\n    // console.log(auth)\r\n    // console.log(comment)\r\n    return(\r\n         <div className=\"collection-item\">\r\n            <p>{comment.content}</p>\r\n            <div className=\"lighten-4 grey-text\">{moment(comment.createdAt.toDate()).calendar()}</div>\r\n            <div className=\"lighten-4 grey-text\">{comment.name}</div>\r\n\r\n            { auth.uid === comment.nameId ? <div className=\"delete-comment lighten-4 grey-text\" onClick={() => {props.deleteComment(comment)}}><i className=\"material-icons\">delete_forever</i></div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteComment: (commentData) => dispatch(deleteComment(commentData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { Component } from 'react';\r\nimport Comment from './Comment'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'  // do polaczenia componenta z jedna kolekcja czyli z 'topics' w bazie danych\r\nimport { compose } from 'redux' /// zeby sie polaczyc trzeba dodac drugi higher order component przez compoase\r\nimport { createComment } from '../actions/topicActions'\r\nimport moment from 'moment'\r\n\r\n\r\nclass TopicDetails extends Component {\r\n    state = {\r\n        content: \"\",\r\n        topicId: \"\",\r\n        commentId: \"\",\r\n    }\r\n    componentDidMount(){\r\n        this.props.resetFormError();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.content !== \"\"){\r\n            let commentId = Math.random()*10;\r\n            this.setState({\r\n                topicId: this.props.location.pathname.slice(7),\r\n                commentId: commentId\r\n            }, function(){\r\n                this.props.createComment(this.state)\r\n                this.setState({\r\n                    content: \"\"\r\n                })\r\n                this.props.resetFormError();\r\n            })\r\n        } else {\r\n            this.props.formNullComment();\r\n        }\r\n    }\r\n  render() {\r\n    const { topic, auth, formError } = this.props;\r\n    //// if user is logged in show add comment button\r\n    const addCommentVisibility = auth.uid ? ( \r\n        <div className=\"card col s12 m12 l8 offset-l2\">\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"input-field\">\r\n                            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.content}></textarea>\r\n                            <label htmlFor=\"textarea1\">Comment</label>\r\n                            </div>\r\n                            <button className=\"btn red darken-4 waves-effect waves-light\" onClick={this.handleSubmit}>Add comment</button>\r\n\r\n                            <div className=\"center\">\r\n                            { formError ? <p className=\"red-text\">{formError}</p> : null }\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n     ) : ( <div className=\"card center z-depth-0 col s12 m12 l8 offset-l2 grey-text\">\r\n            log in to add comments\r\n         </div> )\r\n\r\n      if (topic) {\r\n        return (\r\n            <div className=\"container section row\">\r\n                <div className=\"card col s12 m12 l8 offset-l2\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"flow-text\">{topic.title}</span>\r\n                        <p>{topic.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action lighten-4 grey-text\">\r\n                        <div>{moment(topic.createdAt.toDate()).calendar()}</div>\r\n                        <div>{topic.name}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collection col s12 m12 l8 offset-l2\">\r\n                    { topic.comments && topic.comments.map(comment => {\r\n                        return (\r\n                            <Comment comment={comment} key={comment.id}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {addCommentVisibility}\r\n                \r\n            </div>\r\n            \r\n        \r\n        );\r\n      } else {\r\n          return(\r\n              <div className=\"container center\">\r\n                  <p>Loading topic...</p>\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.location.pathname.slice(7);\r\n    const topics = state.firestore.data.topics;\r\n    const topic = topics ? topics[id] : null\r\n    return {\r\n       topic: topic,\r\n       auth: state.firebase.auth,\r\n       formError: state.topic.formError \r\n    }\r\n}\r\n\r\nconst mapDispatchToprops = (dispatch) => {\r\n    return {\r\n        createComment: (comment) => dispatch(createComment(comment)),\r\n        formNullComment: () => { dispatch({type: 'FORM_NULL_COMMENT' }) },\r\n        resetFormError: () => { dispatch({type: 'RESET_ERROR' }) }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToprops),\r\n    firestoreConnect([\r\n        { collection: 'topics' }\r\n    ])\r\n)(TopicDetails)\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp'\nimport Home from './components/Home'\nimport CreateTopic from './components/CreateTopic'\nimport TopicDetails from './components/TopicDetails'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n\n            <Route exact path='/' component={Home} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateTopic} />\n            <Route patch='/topic/:id' component={TopicDetails} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    if (action.type === 'LOGIN_SUCCESS') {\r\n        console.log('You logged in succesfull!')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    } else if (action.type === 'LOGIN_ERROR') {\r\n        console.log('You failed log in!', action.error)\r\n        return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n        }\r\n    } else if (action.type === 'SIGNOUT_SUCCESS') {\r\n        console.log('You logged out sucesfull')\r\n        return state\r\n    } else if (action.type === 'SIGNUP_SUCCESS') {\r\n        console.log('You signed up sucesfull')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    } else if (action.type === 'SIGNUP_ERROR') {\r\n        console.log('Signup error')\r\n        return {\r\n            ...state,\r\n            authError: action.error.message\r\n        }\r\n    } else if (action.type === 'RESET_ERROR') {\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    formError: null\r\n}\r\n\r\nconst topicReducer = (state = initState, action) => {\r\n    if (action.type === 'CREATE_TOPIC'){\r\n        console.log('created topic');\r\n        return state;\r\n    } else if (action.type === 'CREATE_TOPIC_ERROR') {\r\n        console.log('created topic error', action.error);\r\n        return state;\r\n    } else if (action.type === 'CREATE_COMMENT') {\r\n        console.log('created comment');\r\n        return state;\r\n    } else if (action.type === 'CREATE_COMMENT_ERROR') {\r\n        console.log('created comment error', action.error);\r\n        return state;\r\n    } else if (action.type === 'DELETE_COMMENT') {\r\n        console.log('comment deleted');\r\n        return state;\r\n    } else if (action.type === 'DELETE_COMMENT_ERROR') {\r\n        console.log('comment delete error', action.error);\r\n        return state;\r\n    } else if (action.type === 'FORM_NULL_TOPIC') {\r\n        return {\r\n            ...state,\r\n            formError: \"To publish topic, you must fill title and content\"\r\n        }\r\n    } else if (action.type === 'FORM_NULL_COMMENT') {\r\n        return {\r\n            ...state,\r\n            formError: \"To publish comment, you must fill content\"\r\n        }\r\n    } else if (action.type === 'RESET_ERROR') {\r\n        return {\r\n            ...state,\r\n            formError: null\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport default topicReducer","import authReducer from './authReducer'\r\nimport topicReducer from './topicReducer'\r\nimport { combineReducers } from 'redux'\r\n/// zeby brac dane z firebase\r\nimport { firestoreReducer } from 'redux-firestore'\r\n/// do auth\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    topic: topicReducer,\r\n    //// 1 dostep do danych z bazy /2 connect component z data base\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer   /// jesli bierzemy state z firestora to zwraca nam także informacje firebase w tym stan usera auth\r\n\r\n})\r\n\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n\r\n // Initialize Firebase\r\n var config = {\r\n    apiKey: \"AIzaSyDR0yKOSTWhzOM_Y_p83p9IidxCbxDaHno\",\r\n    authDomain: \"forum-98544.firebaseapp.com\",\r\n    databaseURL: \"https://forum-98544.firebaseio.com\",\r\n    projectId: \"forum-98544\",\r\n    storageBucket: \"forum-98544.appspot.com\",\r\n    messagingSenderId: \"152163714241\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\n  export default firebase\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n/////connecting with firebase\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\n/// thunk with extra argument firebase/firestore umozliwia w action async do bazydanych\nimport fbConfig from './fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true , userProfile: 'users', attachAuthIsReady: true})\n    )///// reactReduxFirebase first 2 parameters, zmus firebase to dodanie do state profili userow\n);     \n\n//////wait for firebase auth initialize and then render dom to prevent wrong dom flash/dispaly based on auth status\n///// added attachAuthIsReady as second parametr to reactReduxFirebase and store.firebaseAuthIsReady.then before render DOM\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}